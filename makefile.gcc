# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.6 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C compiler 
CC = gcc

# C++ compiler 
CXX = g++

# Standard flags for CC 
CFLAGS ?= 

# Standard flags for C++ 
CXXFLAGS ?= 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS ?= 

# Standard linker flags 
LDFLAGS ?= -static

# Use DLL build of wx library? [0,1]
WX_SHARED ?= 0

# Use Unicode build of wxWidgets? [0,1]
WX_UNICODE ?= 1

# Use debug build of wxWidgets (define __WXDEBUG__)? [0,1]
WX_DEBUG ?= 0

# Version of the wx library to build against. 
WX_VERSION ?= 28

# Use monolithic build of wxWidgets? [0,1]
WX_MONOLITHIC ?= 0

# The directory where wxWidgets library is installed 
WX_DIR ?= $(WXWIN)



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

CPPDEPS = -MT$@ -MF$@.d -MD -MP
SQLITE3_STATIC_CFLAGS = -DHAVE_W32API_H $(____WX_SHARED) \
	$(__WXUNICODE_DEFINE_p) $(__WXDEBUG_DEFINE_p) -D__WXMSW__ \
	-I$(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX) -I$(WX_DIR)\include $(CPPFLAGS) \
	$(CFLAGS)
SQLITE3_STATIC_OBJECTS =  \
	build\sqlite3_static_sqlite3.o
EXPAT_STATIC_CFLAGS = -DHAVE_W32API_H $(____WX_SHARED) $(__WXUNICODE_DEFINE_p) \
	$(__WXDEBUG_DEFINE_p) -D__WXMSW__ \
	-I$(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX) -I$(WX_DIR)\include \
	-DHAVE_EXPAT_CONFIG_H -IExpat $(CPPFLAGS) $(CFLAGS)
EXPAT_STATIC_OBJECTS =  \
	build\expat_static_xmlparse.o \
	build\expat_static_xmlrole.o \
	build\expat_static_xmltok.o \
	build\expat_static_xmltok_impl.o \
	build\expat_static_xmltok_ns.o
DBLAYER_CXXFLAGS = -DHAVE_W32API_H $(____WX_SHARED) $(__WXUNICODE_DEFINE_p) \
	$(__WXDEBUG_DEFINE_p) -D__WXMSW__ \
	-I$(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX) -I$(WX_DIR)\include \
	-DDONT_USE_DATABASE_LAYER_EXCEPTIONS -ISQLite $(CPPFLAGS) $(CXXFLAGS)
DBLAYER_OBJECTS =  \
	build\DBLayer_DatabaseErrorReporter.o \
	build\DBLayer_DatabaseLayer.o \
	build\DBLayer_DatabaseQueryParser.o \
	build\DBLayer_DatabaseResultSet.o \
	build\DBLayer_DatabaseStringConverter.o \
	build\DBLayer_PreparedStatement.o \
	build\DBLayer_SqliteDatabaseLayer.o \
	build\DBLayer_SqlitePreparedStatement.o \
	build\DBLayer_SqliteResultSet.o \
	build\DBLayer_SqliteResultSetMetaData.o
MYRULIB_CFLAGS = -DHAVE_W32API_H $(____WX_SHARED) $(__WXUNICODE_DEFINE_p) \
	$(__WXDEBUG_DEFINE_p) -D__WXMSW__ \
	-I$(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX) -I$(WX_DIR)\include \
	-DDONT_USE_DATABASE_LAYER_EXCEPTIONS -DXML_STATIC -ISQLite -IExpat -IDBLayer \
	-O2 $(CPPFLAGS) $(CFLAGS)
MYRULIB_CXXFLAGS = -DHAVE_W32API_H $(____WX_SHARED) $(__WXUNICODE_DEFINE_p) \
	$(__WXDEBUG_DEFINE_p) -D__WXMSW__ \
	-I$(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX) -I$(WX_DIR)\include \
	-DDONT_USE_DATABASE_LAYER_EXCEPTIONS -DXML_STATIC -ISQLite -IExpat -IDBLayer \
	-O2 $(CPPFLAGS) $(CXXFLAGS)
MYRULIB_OBJECTS =  \
	build\myrulib_BaseThread.o \
	build\myrulib_BookExtractInfo.o \
	build\myrulib_BookListCtrl.o \
	build\myrulib_BooksPanel.o \
	build\myrulib_ExpThread.o \
	build\myrulib_ExternalDlg.o \
	build\myrulib_FbAuthorList.o \
	build\myrulib_FbConst.o \
	build\myrulib_FbFrameAuthor.o \
	build\myrulib_FbFrameBase.o \
	build\myrulib_FbFrameSearch.o \
	build\myrulib_FbFrameFavorites.o \
	build\myrulib_FbGenres.o \
	build\myrulib_FbLogStream.o \
	build\myrulib_FbManager.o \
	build\myrulib_FbParams.o \
	build\myrulib_ImpContext.o \
	build\myrulib_ImpThread.o \
	build\myrulib_InfoCash.o \
	build\myrulib_InfoThread.o \
	build\myrulib_LimitedTextCtrl.o \
	build\myrulib_MyRuLibApp.o \
	build\myrulib_MyRuLibMain.o \
	build\myrulib_MyrulibData.o \
	build\myrulib_ParseCtx.o \
	build\myrulib_ProgressBar.o \
	build\myrulib_SettingsDlg.o \
	build\myrulib_TitleThread.o \
	build\myrulib_VacuumThread.o \
	build\myrulib_ZipReader.o \
	build\myrulib_Archives.o \
	build\myrulib_Authors.o \
	build\myrulib_Books.o \
	build\myrulib_Bookseq.o \
	build\myrulib_Files.o \
	build\myrulib_Params.o \
	build\myrulib_Sequences.o \
	build\myrulib_Types.o \
	build\myrulib_wxActiveRecord.o \
	build\myrulib_ZipBooks.o \
	build\myrulib_ZipFiles.o \
	build\myrulib_sha1.o \
	build\myrulib_base64.o \
	build\myrulib_treelistctrl.o \
	build\myrulib_resource_rc.o

### Conditionally set variables: ###

ifeq ($(WX_DEBUG),1)
WX3RDPARTYLIBPOSTFIX = d
endif
ifeq ($(WX_SHARED),0)
____WX_SHARED_3_p_1 = 
endif
ifeq ($(WX_SHARED),1)
____WX_SHARED_3_p_1 = --define WXUSINGDLL
endif
ifeq ($(WX_UNICODE),1)
__WXUNICODE_DEFINE_p_4 = --define _UNICODE
endif
ifeq ($(WX_DEBUG),1)
__WXDEBUG_DEFINE_p_4 = --define __WXDEBUG__
endif
ifeq ($(WX_MONOLITHIC),0)
__WXLIB_AUI_NAME_p = -lwxmsw$(WX_VERSION)$(WXLIBPOSTFIX)_aui
endif
ifeq ($(WX_MONOLITHIC),0)
__WXLIB_XRC_NAME_p = -lwxmsw$(WX_VERSION)$(WXLIBPOSTFIX)_xrc
endif
ifeq ($(WX_MONOLITHIC),0)
__WXLIB_HTML_NAME_p = -lwxmsw$(WX_VERSION)$(WXLIBPOSTFIX)_html
endif
ifeq ($(WX_MONOLITHIC),0)
__WXLIB_CORE_NAME_p = -lwxmsw$(WX_VERSION)$(WXLIBPOSTFIX)_core
endif
ifeq ($(WX_MONOLITHIC),0)
__WXLIB_BASE_NAME_p = -lwxbase$(WX_VERSION)$(WXLIBPOSTFIX)
endif
ifeq ($(WX_MONOLITHIC),1)
__WXLIB_BASE_NAME_p = -lwxmsw$(WX_VERSION)$(WXLIBPOSTFIX)
endif
ifeq ($(WX_SHARED),0)
____WX_SHARED = 
endif
ifeq ($(WX_SHARED),1)
____WX_SHARED = -DWXUSINGDLL
endif
ifeq ($(WX_UNICODE),1)
__WXUNICODE_DEFINE_p = -D_UNICODE
endif
ifeq ($(WX_DEBUG),1)
__WXDEBUG_DEFINE_p = -D__WXDEBUG__
endif
ifeq ($(WX_DEBUG),0)
ifeq ($(WX_UNICODE),1)
WXLIBPOSTFIX = u
endif
endif
ifeq ($(WX_DEBUG),1)
ifeq ($(WX_UNICODE),0)
WXLIBPOSTFIX = d
endif
endif
ifeq ($(WX_DEBUG),1)
ifeq ($(WX_UNICODE),1)
WXLIBPOSTFIX = ud
endif
endif
ifeq ($(WX_SHARED),0)
WXLIBPATH = \lib\gcc_lib
endif
ifeq ($(WX_SHARED),1)
WXLIBPATH = \lib\gcc_dll
endif


all: build
build:
	-if not exist build mkdir build

### Targets: ###

all: test_for_selected_wxbuild build\libsqlite3_static.a build\libexpat_static.a build\libDBLayer.a build\myrulib.exe

clean: 
	-if exist build\*.o del build\*.o
	-if exist build\*.d del build\*.d
	-if exist build\libsqlite3_static.a del build\libsqlite3_static.a
	-if exist build\libexpat_static.a del build\libexpat_static.a
	-if exist build\libDBLayer.a del build\libDBLayer.a
	-if exist build\myrulib.exe del build\myrulib.exe

test_for_selected_wxbuild: 
	@if not exist $(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX)\wx\setup.h \
	echo ----------------------------------------------------------------------------
	@if not exist $(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX)\wx\setup.h \
	echo The selected wxWidgets build is not available!
	@if not exist $(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX)\wx\setup.h \
	echo Please use the options prefixed with WX_ to select another wxWidgets build.
	@if not exist $(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX)\wx\setup.h \
	echo ----------------------------------------------------------------------------
	@if not exist $(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX)\wx\setup.h \
	exit 1

build\libsqlite3_static.a: $(SQLITE3_STATIC_OBJECTS)
	if exist $@ del $@
	ar rcu $@ $(SQLITE3_STATIC_OBJECTS)
	ranlib $@

build\libexpat_static.a: $(EXPAT_STATIC_OBJECTS)
	if exist $@ del $@
	ar rcu $@ $(EXPAT_STATIC_OBJECTS)
	ranlib $@

build\libDBLayer.a: $(DBLAYER_OBJECTS)
	if exist $@ del $@
	ar rcu $@ $(DBLAYER_OBJECTS)
	ranlib $@

build\myrulib.exe: $(MYRULIB_OBJECTS) build\myrulib_resource_rc.o build\libDBLayer.a build\libsqlite3_static.a build\libexpat_static.a
	$(CXX) -o $@ $(MYRULIB_OBJECTS)  -L$(WX_DIR)$(WXLIBPATH) -Wl,--subsystem,windows -mwindows   $(LDFLAGS)  build\libDBLayer.a build\libsqlite3_static.a build\libexpat_static.a $(__WXLIB_AUI_NAME_p) $(__WXLIB_XRC_NAME_p) $(__WXLIB_HTML_NAME_p) $(__WXLIB_CORE_NAME_p) $(__WXLIB_BASE_NAME_p) -lwxtiff$(WX3RDPARTYLIBPOSTFIX) -lwxjpeg$(WX3RDPARTYLIBPOSTFIX) -lwxpng$(WX3RDPARTYLIBPOSTFIX) -lwxzlib$(WX3RDPARTYLIBPOSTFIX) -lwxregex$(WXLIBPOSTFIX) -lwxexpat$(WX3RDPARTYLIBPOSTFIX) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lshlwapi
	strip ./build/myrulib.exe

build\sqlite3_static_sqlite3.o: ./SQLite/sqlite3.c
	$(CC) -c -o $@ $(SQLITE3_STATIC_CFLAGS) $(CPPDEPS) $<

build\expat_static_xmlparse.o: ./Expat/xmlparse.c
	$(CC) -c -o $@ $(EXPAT_STATIC_CFLAGS) $(CPPDEPS) $<

build\expat_static_xmlrole.o: ./Expat/xmlrole.c
	$(CC) -c -o $@ $(EXPAT_STATIC_CFLAGS) $(CPPDEPS) $<

build\expat_static_xmltok.o: ./Expat/xmltok.c
	$(CC) -c -o $@ $(EXPAT_STATIC_CFLAGS) $(CPPDEPS) $<

build\expat_static_xmltok_impl.o: ./Expat/xmltok_impl.c
	$(CC) -c -o $@ $(EXPAT_STATIC_CFLAGS) $(CPPDEPS) $<

build\expat_static_xmltok_ns.o: ./Expat/xmltok_ns.c
	$(CC) -c -o $@ $(EXPAT_STATIC_CFLAGS) $(CPPDEPS) $<

build\DBLayer_DatabaseErrorReporter.o: ./DBLayer/DatabaseErrorReporter.cpp
	$(CXX) -c -o $@ $(DBLAYER_CXXFLAGS) $(CPPDEPS) $<

build\DBLayer_DatabaseLayer.o: ./DBLayer/DatabaseLayer.cpp
	$(CXX) -c -o $@ $(DBLAYER_CXXFLAGS) $(CPPDEPS) $<

build\DBLayer_DatabaseQueryParser.o: ./DBLayer/DatabaseQueryParser.cpp
	$(CXX) -c -o $@ $(DBLAYER_CXXFLAGS) $(CPPDEPS) $<

build\DBLayer_DatabaseResultSet.o: ./DBLayer/DatabaseResultSet.cpp
	$(CXX) -c -o $@ $(DBLAYER_CXXFLAGS) $(CPPDEPS) $<

build\DBLayer_DatabaseStringConverter.o: ./DBLayer/DatabaseStringConverter.cpp
	$(CXX) -c -o $@ $(DBLAYER_CXXFLAGS) $(CPPDEPS) $<

build\DBLayer_PreparedStatement.o: ./DBLayer/PreparedStatement.cpp
	$(CXX) -c -o $@ $(DBLAYER_CXXFLAGS) $(CPPDEPS) $<

build\DBLayer_SqliteDatabaseLayer.o: ./DBLayer/SqliteDatabaseLayer.cpp
	$(CXX) -c -o $@ $(DBLAYER_CXXFLAGS) $(CPPDEPS) $<

build\DBLayer_SqlitePreparedStatement.o: ./DBLayer/SqlitePreparedStatement.cpp
	$(CXX) -c -o $@ $(DBLAYER_CXXFLAGS) $(CPPDEPS) $<

build\DBLayer_SqliteResultSet.o: ./DBLayer/SqliteResultSet.cpp
	$(CXX) -c -o $@ $(DBLAYER_CXXFLAGS) $(CPPDEPS) $<

build\DBLayer_SqliteResultSetMetaData.o: ./DBLayer/SqliteResultSetMetaData.cpp
	$(CXX) -c -o $@ $(DBLAYER_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_BaseThread.o: ./MyRuLib/BaseThread.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_BookExtractInfo.o: ./MyRuLib/BookExtractInfo.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_BookListCtrl.o: ./MyRuLib/BookListCtrl.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_BooksPanel.o: ./MyRuLib/BooksPanel.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_ExpThread.o: ./MyRuLib/ExpThread.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_ExternalDlg.o: ./MyRuLib/ExternalDlg.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_FbAuthorList.o: ./MyRuLib/FbAuthorList.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_FbConst.o: ./MyRuLib/FbConst.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_FbFrameAuthor.o: ./MyRuLib/FbFrameAuthor.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_FbFrameBase.o: ./MyRuLib/FbFrameBase.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_FbFrameSearch.o: ./MyRuLib/FbFrameSearch.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_FbFrameFavorites.o: ./MyRuLib/FbFrameFavorites.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_FbGenres.o: ./MyRuLib/FbGenres.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_FbLogStream.o: ./MyRuLib/FbLogStream.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_FbManager.o: ./MyRuLib/FbManager.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_FbParams.o: ./MyRuLib/FbParams.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_ImpContext.o: ./MyRuLib/ImpContext.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_ImpThread.o: ./MyRuLib/ImpThread.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_InfoCash.o: ./MyRuLib/InfoCash.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_InfoThread.o: ./MyRuLib/InfoThread.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_LimitedTextCtrl.o: ./MyRuLib/LimitedTextCtrl.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_MyRuLibApp.o: ./MyRuLib/MyRuLibApp.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_MyRuLibMain.o: ./MyRuLib/MyRuLibMain.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_MyrulibData.o: ./MyRuLib/MyrulibData.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_ParseCtx.o: ./MyRuLib/ParseCtx.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_ProgressBar.o: ./MyRuLib/ProgressBar.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_SettingsDlg.o: ./MyRuLib/SettingsDlg.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_TitleThread.o: ./MyRuLib/TitleThread.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_VacuumThread.o: ./MyRuLib/VacuumThread.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_ZipReader.o: ./MyRuLib/ZipReader.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_Archives.o: ./MyRuLib/db/Archives.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_Authors.o: ./MyRuLib/db/Authors.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_Books.o: ./MyRuLib/db/Books.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_Bookseq.o: ./MyRuLib/db/Bookseq.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_Files.o: ./MyRuLib/db/Files.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_Params.o: ./MyRuLib/db/Params.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_Sequences.o: ./MyRuLib/db/Sequences.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_Types.o: ./MyRuLib/db/Types.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_wxActiveRecord.o: ./MyRuLib/db/wxActiveRecord.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_ZipBooks.o: ./MyRuLib/db/ZipBooks.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_ZipFiles.o: ./MyRuLib/db/ZipFiles.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_sha1.o: ./MyRuLib/sha1/sha1.c
	$(CC) -c -o $@ $(MYRULIB_CFLAGS) $(CPPDEPS) $<

build\myrulib_base64.o: ./MyRuLib/wx/base64.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_treelistctrl.o: ./MyRuLib/wx/treelistctrl.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

build\myrulib_resource_rc.o: ./MyRuLib/res/resource.rc
	windres --use-temp-file -i$< -o$@  --define HAVE_W32API_H $(____WX_SHARED_3_p_1) $(__WXUNICODE_DEFINE_p_4) $(__WXDEBUG_DEFINE_p_4) --define __WXMSW__ --include-dir $(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX) --include-dir $(WX_DIR)/include --define DONT_USE_DATABASE_LAYER_EXCEPTIONS --define XML_STATIC --include-dir SQLite --include-dir Expat --include-dir DBLayer

.PHONY: all clean


SHELL := $(COMSPEC)

# Dependencies tracking:
-include build/*.d
