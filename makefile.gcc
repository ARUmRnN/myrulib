# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.6 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C compiler 
CC = gcc

# C++ compiler 
CXX = g++

# Standard flags for CC 
CFLAGS ?= 

# Standard flags for C++ 
CXXFLAGS ?= 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS ?= 

# Standard linker flags 
LDFLAGS ?= 

# Use DLL build of wx library? [0,1]
WX_SHARED ?= 0

# Use Unicode build of wxWidgets? [0,1]
WX_UNICODE ?= 1

# Use debug build of wxWidgets (define __WXDEBUG__)? [0,1]
WX_DEBUG ?= 0

# Version of the wx library to build against. 
WX_VERSION ?= 28

# Use monolithic build of wxWidgets? [0,1]
WX_MONOLITHIC ?= 0

# The directory where wxWidgets library is installed 
WX_DIR ?= $(WXWIN)



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

CPPDEPS = -MT$@ -MF$@.d -MD -MP
SQLITE_CFLAGS = -DHAVE_W32API_H $(____WX_SHARED) $(__WXUNICODE_DEFINE_p) \
	$(__WXDEBUG_DEFINE_p) -D__WXMSW__ \
	-I$(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX) -I$(WX_DIR)\include $(CPPFLAGS) \
	$(CFLAGS)
SQLITE_OBJECTS =  \
	SQLite_sqlite3.o
EXPAT_CFLAGS = -DHAVE_W32API_H $(____WX_SHARED) $(__WXUNICODE_DEFINE_p) \
	$(__WXDEBUG_DEFINE_p) -D__WXMSW__ \
	-I$(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX) -I$(WX_DIR)\include \
	-DCOMPILED_FROM_DSP $(CPPFLAGS) $(CFLAGS)
EXPAT_OBJECTS =  \
	Expat_xmlparse.o \
	Expat_xmlrole.o \
	Expat_xmltok.o \
	Expat_xmltok_impl.o \
	Expat_xmltok_ns.o
DATABASELAYER_CXXFLAGS = -DHAVE_W32API_H $(____WX_SHARED) \
	$(__WXUNICODE_DEFINE_p) $(__WXDEBUG_DEFINE_p) -D__WXMSW__ \
	-I$(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX) -I$(WX_DIR)\include -ISQLite \
	$(CPPFLAGS) $(CXXFLAGS)
DATABASELAYER_OBJECTS =  \
	DatabaseLayer_DatabaseErrorReporter.o \
	DatabaseLayer_DatabaseLayer.o \
	DatabaseLayer_DatabaseQueryParser.o \
	DatabaseLayer_DatabaseResultSet.o \
	DatabaseLayer_DatabaseStringConverter.o \
	DatabaseLayer_PreparedStatement.o \
	DatabaseLayer_SqliteDatabaseLayer.o \
	DatabaseLayer_SqlitePreparedStatement.o \
	DatabaseLayer_SqliteResultSet.o \
	DatabaseLayer_SqliteResultSetMetaData.o
MYRULIB_CXXFLAGS = -DHAVE_W32API_H $(____WX_SHARED) $(__WXUNICODE_DEFINE_p) \
	$(__WXDEBUG_DEFINE_p) -D__WXMSW__ \
	-I$(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX) -I$(WX_DIR)\include -IExpat \
	-IDatabaseLayer -ISQLite $(CPPFLAGS) $(CXXFLAGS)
MYRULIB_OBJECTS =  \
	MyRuLib_BookListCtrl.o \
	MyRuLib_DBCreator.o \
	MyRuLib_ExpThread.o \
	MyRuLib_ExternalDlg.o \
	MyRuLib_FbGenres.o \
	MyRuLib_FbManager.o \
	MyRuLib_FbParams.o \
	MyRuLib_ImpContext.o \
	MyRuLib_ImpThread.o \
	MyRuLib_InfoCash.o \
	MyRuLib_InfoThread.o \
	MyRuLib_MyRuLibApp.o \
	MyRuLib_MyRuLibMain.o \
	MyRuLib_ParseCtx.o \
	MyRuLib_ProgressBar.o \
	MyRuLib_RegThread.o \
	MyRuLib_SettingsDlg.o \
	MyRuLib_TitleThread.o \
	MyRuLib_ZipReader.o \
	MyRuLib_Archives.o \
	MyRuLib_Authors.o \
	MyRuLib_Books.o \
	MyRuLib_Bookseq.o \
	MyRuLib_Params.o \
	MyRuLib_Sequences.o \
	MyRuLib_wxActiveRecord.o \
	MyRuLib_base64.o \
	MyRuLib_treelistctrl.o

### Conditionally set variables: ###

ifeq ($(WX_DEBUG),1)
WX3RDPARTYLIBPOSTFIX = d
endif
ifeq ($(WX_MONOLITHIC),0)
__WXLIB_CORE_NAME_p = -lwxmsw$(WX_VERSION)$(WXLIBPOSTFIX)_core
endif
ifeq ($(WX_MONOLITHIC),0)
__WXLIB_BASE_NAME_p = -lwxbase$(WX_VERSION)$(WXLIBPOSTFIX)
endif
ifeq ($(WX_MONOLITHIC),1)
__WXLIB_BASE_NAME_p = -lwxmsw$(WX_VERSION)$(WXLIBPOSTFIX)
endif
ifeq ($(WX_SHARED),0)
____WX_SHARED = 
endif
ifeq ($(WX_SHARED),1)
____WX_SHARED = -DWXUSINGDLL
endif
ifeq ($(WX_UNICODE),1)
__WXUNICODE_DEFINE_p = -D_UNICODE
endif
ifeq ($(WX_DEBUG),1)
__WXDEBUG_DEFINE_p = -D__WXDEBUG__
endif
ifeq ($(WX_DEBUG),0)
ifeq ($(WX_UNICODE),1)
WXLIBPOSTFIX = u
endif
endif
ifeq ($(WX_DEBUG),1)
ifeq ($(WX_UNICODE),0)
WXLIBPOSTFIX = d
endif
endif
ifeq ($(WX_DEBUG),1)
ifeq ($(WX_UNICODE),1)
WXLIBPOSTFIX = ud
endif
endif
ifeq ($(WX_SHARED),0)
WXLIBPATH = \lib\gcc_lib
endif
ifeq ($(WX_SHARED),1)
WXLIBPATH = \lib\gcc_dll
endif


### Targets: ###

all: test_for_selected_wxbuild libSQLite.a libExpat.a libDatabaseLayer.a MyRuLib.exe

clean: 
	-if exist .\*.o del .\*.o
	-if exist .\*.d del .\*.d
	-if exist libSQLite.a del libSQLite.a
	-if exist libExpat.a del libExpat.a
	-if exist libDatabaseLayer.a del libDatabaseLayer.a
	-if exist MyRuLib.exe del MyRuLib.exe

test_for_selected_wxbuild: 
	@if not exist $(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX)\wx\setup.h \
	echo ----------------------------------------------------------------------------
	@if not exist $(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX)\wx\setup.h \
	echo The selected wxWidgets build is not available!
	@if not exist $(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX)\wx\setup.h \
	echo Please use the options prefixed with WX_ to select another wxWidgets build.
	@if not exist $(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX)\wx\setup.h \
	echo ----------------------------------------------------------------------------
	@if not exist $(WX_DIR)$(WXLIBPATH)\msw$(WXLIBPOSTFIX)\wx\setup.h \
	exit 1

libSQLite.a: $(SQLITE_OBJECTS)
	if exist $@ del $@
	ar rcu $@ $(SQLITE_OBJECTS)
	ranlib $@

libExpat.a: $(EXPAT_OBJECTS)
	if exist $@ del $@
	ar rcu $@ $(EXPAT_OBJECTS)
	ranlib $@

libDatabaseLayer.a: $(DATABASELAYER_OBJECTS)
	if exist $@ del $@
	ar rcu $@ $(DATABASELAYER_OBJECTS)
	ranlib $@

MyRuLib.exe: $(MYRULIB_OBJECTS) libExpat.a libDatabaseLayer.a libSQLite.a
	$(CXX) -o $@ $(MYRULIB_OBJECTS)  -mthreads -L$(WX_DIR)$(WXLIBPATH) -Wl,--subsystem,windows -mwindows $(LDFLAGS)  libExpat.a libDatabaseLayer.a libSQLite.a $(__WXLIB_CORE_NAME_p) $(__WXLIB_BASE_NAME_p) -lwxtiff$(WX3RDPARTYLIBPOSTFIX) -lwxjpeg$(WX3RDPARTYLIBPOSTFIX) -lwxpng$(WX3RDPARTYLIBPOSTFIX) -lwxzlib$(WX3RDPARTYLIBPOSTFIX) -lwxregex$(WXLIBPOSTFIX) -lwxexpat$(WX3RDPARTYLIBPOSTFIX) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32

SQLite_sqlite3.o: ./SQLite/sqlite3.c
	$(CC) -c -o $@ $(SQLITE_CFLAGS) $(CPPDEPS) $<

Expat_xmlparse.o: ./Expat/xmlparse.c
	$(CC) -c -o $@ $(EXPAT_CFLAGS) $(CPPDEPS) $<

Expat_xmlrole.o: ./Expat/xmlrole.c
	$(CC) -c -o $@ $(EXPAT_CFLAGS) $(CPPDEPS) $<

Expat_xmltok.o: ./Expat/xmltok.c
	$(CC) -c -o $@ $(EXPAT_CFLAGS) $(CPPDEPS) $<

Expat_xmltok_impl.o: ./Expat/xmltok_impl.c
	$(CC) -c -o $@ $(EXPAT_CFLAGS) $(CPPDEPS) $<

Expat_xmltok_ns.o: ./Expat/xmltok_ns.c
	$(CC) -c -o $@ $(EXPAT_CFLAGS) $(CPPDEPS) $<

DatabaseLayer_DatabaseErrorReporter.o: ./DatabaseLayer/DatabaseErrorReporter.cpp
	$(CXX) -c -o $@ $(DATABASELAYER_CXXFLAGS) $(CPPDEPS) $<

DatabaseLayer_DatabaseLayer.o: ./DatabaseLayer/DatabaseLayer.cpp
	$(CXX) -c -o $@ $(DATABASELAYER_CXXFLAGS) $(CPPDEPS) $<

DatabaseLayer_DatabaseQueryParser.o: ./DatabaseLayer/DatabaseQueryParser.cpp
	$(CXX) -c -o $@ $(DATABASELAYER_CXXFLAGS) $(CPPDEPS) $<

DatabaseLayer_DatabaseResultSet.o: ./DatabaseLayer/DatabaseResultSet.cpp
	$(CXX) -c -o $@ $(DATABASELAYER_CXXFLAGS) $(CPPDEPS) $<

DatabaseLayer_DatabaseStringConverter.o: ./DatabaseLayer/DatabaseStringConverter.cpp
	$(CXX) -c -o $@ $(DATABASELAYER_CXXFLAGS) $(CPPDEPS) $<

DatabaseLayer_PreparedStatement.o: ./DatabaseLayer/PreparedStatement.cpp
	$(CXX) -c -o $@ $(DATABASELAYER_CXXFLAGS) $(CPPDEPS) $<

DatabaseLayer_SqliteDatabaseLayer.o: ./DatabaseLayer/SqliteDatabaseLayer.cpp
	$(CXX) -c -o $@ $(DATABASELAYER_CXXFLAGS) $(CPPDEPS) $<

DatabaseLayer_SqlitePreparedStatement.o: ./DatabaseLayer/SqlitePreparedStatement.cpp
	$(CXX) -c -o $@ $(DATABASELAYER_CXXFLAGS) $(CPPDEPS) $<

DatabaseLayer_SqliteResultSet.o: ./DatabaseLayer/SqliteResultSet.cpp
	$(CXX) -c -o $@ $(DATABASELAYER_CXXFLAGS) $(CPPDEPS) $<

DatabaseLayer_SqliteResultSetMetaData.o: ./DatabaseLayer/SqliteResultSetMetaData.cpp
	$(CXX) -c -o $@ $(DATABASELAYER_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_BookListCtrl.o: ./MyRuLib/BookListCtrl.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_DBCreator.o: ./MyRuLib/DBCreator.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_ExpThread.o: ./MyRuLib/ExpThread.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_ExternalDlg.o: ./MyRuLib/ExternalDlg.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_FbGenres.o: ./MyRuLib/FbGenres.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_FbManager.o: ./MyRuLib/FbManager.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_FbParams.o: ./MyRuLib/FbParams.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_ImpContext.o: ./MyRuLib/ImpContext.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_ImpThread.o: ./MyRuLib/ImpThread.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_InfoCash.o: ./MyRuLib/InfoCash.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_InfoThread.o: ./MyRuLib/InfoThread.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_MyRuLibApp.o: ./MyRuLib/MyRuLibApp.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_MyRuLibMain.o: ./MyRuLib/MyRuLibMain.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_ParseCtx.o: ./MyRuLib/ParseCtx.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_ProgressBar.o: ./MyRuLib/ProgressBar.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_RegThread.o: ./MyRuLib/RegThread.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_SettingsDlg.o: ./MyRuLib/SettingsDlg.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_TitleThread.o: ./MyRuLib/TitleThread.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_ZipReader.o: ./MyRuLib/ZipReader.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_Archives.o: ./MyRuLib/db/Archives.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_Authors.o: ./MyRuLib/db/Authors.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_Books.o: ./MyRuLib/db/Books.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_Bookseq.o: ./MyRuLib/db/Bookseq.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_Params.o: ./MyRuLib/db/Params.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_Sequences.o: ./MyRuLib/db/Sequences.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_wxActiveRecord.o: ./MyRuLib/db/wxActiveRecord.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_base64.o: ./MyRuLib/wx/base64.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

MyRuLib_treelistctrl.o: ./MyRuLib/wx/treelistctrl.cpp
	$(CXX) -c -o $@ $(MYRULIB_CXXFLAGS) $(CPPDEPS) $<

.PHONY: all clean


SHELL := $(COMSPEC)

# Dependencies tracking:
-include ./*.d
