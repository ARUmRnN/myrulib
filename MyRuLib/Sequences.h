/////////////////////////////////////////////////////
// Generated By wxActiveRecordGenerator v 1.2.0-rc3
/////////////////////////////////////////////////////


#ifndef __SEQUENCES_
#define __SEQUENCES_

////@@begin gen include
#include "wxActiveRecord.h"
#include <wx/wx.h>
#include <wx/string.h>
#include <wx/datetime.h>

////@@end gen include

////@@begin custom include
////@@end custom include

////@@begin gen forward
class Sequences;
class SequencesRow;
class SequencesRowSet;


////@@end gen forward

////@@begin custom forward
////@@end custom forward

////@@begin gen arClass
class Sequences: public wxSqliteActiveRecord{
protected:
	SequencesRow* RowFromResult(DatabaseResultSet* result);
public:
	Sequences();
	Sequences(const wxString& name,const wxString& server=wxEmptyString,const wxString& user=wxEmptyString,const wxString& password=wxEmptyString,const wxString& table=wxT("sequences"));
	Sequences(DatabaseLayer* database,const wxString& table=wxT("sequences"));
	bool Create(const wxString& name,const wxString& server=wxEmptyString,const wxString& user=wxEmptyString,const wxString& password=wxEmptyString,const wxString& table=wxT("sequences"));
	
	SequencesRow* New();
	bool Delete(int key);

	
	SequencesRow* Id(int key);
	SequencesRow* Name(const wxString& name);

	SequencesRow* Where(const wxString& whereClause);
	SequencesRowSet* WhereSet(const wxString& whereClause,const wxString& orderBy=wxEmptyString);
	SequencesRowSet* All(const wxString& orderBy=wxEmptyString); 

////@@begin custom arClass
public:
////@@end custom arClass
};
////@@end gen arClass

////@@begin gen arRow
class SequencesRow: public wxActiveRecordRow{
public:
	SequencesRow();
	SequencesRow(const SequencesRow& src);
	SequencesRow(Sequences* activeRecord);
	SequencesRow(DatabaseLayer* database,const wxString& table=wxT("sequences"));
	SequencesRow& operator=(const SequencesRow& src);
	bool GetFromResult(DatabaseResultSet* result);
public:
	wxString value;
	int id;

public:
	
	
	bool Save();
	bool Delete();
	
	
////@@begin custom arRow
public:
////@@end custom arRow	

};
////@@end gen arRow

////@@begin gen arSet
class SequencesRowSet: public wxActiveRecordRowSet{
public:
	SequencesRowSet();
	SequencesRowSet(wxActiveRecord* activeRecord);
	SequencesRowSet(DatabaseLayer* database,const wxString& table=wxT("sequences"));
	virtual SequencesRow* Item(unsigned long item);
	
	virtual bool SaveAll();
	
	
protected:
	static int CMPFUNC_value(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_id(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_global(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	virtual CMPFUNC_proto GetCmpFunc(const wxString& var) const;

////@@begin custom arSet
public:
////@@end custom arSet
};
////@@end gen arSet

#endif /* __SEQUENCES_ */
