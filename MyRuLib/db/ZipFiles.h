/////////////////////////////////////////////////////
// Generated By wxActiveRecordGenerator v 1.2.0-rc3
/////////////////////////////////////////////////////


#ifndef __ZIP_FILES_
#define __ZIP_FILES_

////@@begin gen include
#include "wxActiveRecord.h"
#include <wx/wx.h>
#include <wx/string.h>
#include <wx/datetime.h>

////@@end gen include

////@@begin custom include
////@@end custom include

////@@begin gen forward
class ZipFiles;
class ZipFilesRow;
class ZipFilesRowSet;


////@@end gen forward

////@@begin custom forward
////@@end custom forward

////@@begin gen arClass
class ZipFiles: public wxSqliteActiveRecord{
protected:
	ZipFilesRow* RowFromResult(DatabaseResultSet* result);
public:
	ZipFiles();
	ZipFiles(const wxString& name,const wxString& server=wxEmptyString,const wxString& user=wxEmptyString,const wxString& password=wxEmptyString,const wxString& table=wxT("files"));
	ZipFiles(DatabaseLayer* database,const wxString& table=wxT("files"));
	bool Create(const wxString& name,const wxString& server=wxEmptyString,const wxString& user=wxEmptyString,const wxString& password=wxEmptyString,const wxString& table=wxT("files"));

	ZipFilesRow* New();
	bool Delete(int key);


	ZipFilesRow* File(int key);

	ZipFilesRow* Where(const wxString& whereClause);
	ZipFilesRowSet* WhereSet(const wxString& whereClause,const wxString& orderBy=wxEmptyString);
	ZipFilesRowSet* All(const wxString& orderBy=wxEmptyString);

////@@begin custom arClass
public:




////@@end custom arClass
};
////@@end gen arClass

////@@begin gen arRow
class ZipFilesRow: public wxActiveRecordRow{
public:
	ZipFilesRow();
	ZipFilesRow(const ZipFilesRow& src);
	ZipFilesRow(ZipFiles* activeRecord);
	ZipFilesRow(DatabaseLayer* database,const wxString& table=wxT("files"));
	ZipFilesRow& operator=(const ZipFilesRow& src);
	bool GetFromResult(DatabaseResultSet* result);
public:
	wxString path;
	int file;

public:


	bool Save();
	bool Delete();


////@@begin custom arRow
public:




////@@end custom arRow

};
////@@end gen arRow

////@@begin gen arSet
class ZipFilesRowSet: public wxActiveRecordRowSet{
public:
	ZipFilesRowSet();
	ZipFilesRowSet(wxActiveRecord* activeRecord);
	ZipFilesRowSet(DatabaseLayer* database,const wxString& table=wxT("files"));
	virtual ZipFilesRow* Item(unsigned long item);

	virtual bool SaveAll();


protected:
	static int CMPFUNC_path(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_file(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_global(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	virtual CMPFUNC_proto GetCmpFunc(const wxString& var) const;

////@@begin custom arSet
public:




////@@end custom arSet
};
////@@end gen arSet

#endif /* __ZIP_FILES_ */
