/////////////////////////////////////////////////////
// Generated By wxActiveRecordGenerator v 1.2.0-rc3
/////////////////////////////////////////////////////


#ifndef __ZIP_BOOKS_
#define __ZIP_BOOKS_

////@@begin gen include
#include "wxActiveRecord.h"
#include <wx/wx.h>
#include <wx/string.h>
#include <wx/datetime.h>
#include "ZipFiles.h"

////@@end gen include

////@@begin custom include
////@@end custom include

////@@begin gen forward
class ZipBooks;
class ZipBooksRow;
class ZipBooksRowSet;

class ZipFiles;
class ZipFilesRow;
class ZipFilesRowSet;

////@@end gen forward

////@@begin custom forward
////@@end custom forward

////@@begin gen arClass
class ZipBooks: public wxSqliteActiveRecord{
protected:
	ZipBooksRow* RowFromResult(DatabaseResultSet* result);
public:
	ZipBooks();
	ZipBooks(const wxString& name,const wxString& server=wxEmptyString,const wxString& user=wxEmptyString,const wxString& password=wxEmptyString,const wxString& table=wxT("books"));
	ZipBooks(DatabaseLayer* database,const wxString& table=wxT("books"));
	bool Create(const wxString& name,const wxString& server=wxEmptyString,const wxString& user=wxEmptyString,const wxString& password=wxEmptyString,const wxString& table=wxT("books"));

	ZipBooksRow* New();
	bool Delete(wxString key);

	ZipBooksRow* Book(wxString key);

	ZipBooksRow* Where(const wxString& whereClause);
	ZipBooksRowSet* WhereSet(const wxString& whereClause,const wxString& orderBy=wxEmptyString);
	ZipBooksRowSet* All(const wxString& orderBy=wxEmptyString);

////@@begin custom arClass
public:




////@@end custom arClass
};
////@@end gen arClass

////@@begin gen arRow
class ZipBooksRow: public wxActiveRecordRow{
public:
	ZipBooksRow();
	ZipBooksRow(const ZipBooksRow& src);
	ZipBooksRow(ZipBooks* activeRecord);
	ZipBooksRow(DatabaseLayer* database,const wxString& table=wxT("books"));
	ZipBooksRow& operator=(const ZipBooksRow& src);
	bool GetFromResult(DatabaseResultSet* result);
public:
	wxString book;
	int file;

public:
	ZipFilesRow* GetFile();

	bool Save();
	bool Delete();

////@@begin custom arRow
public:




////@@end custom arRow

};
////@@end gen arRow

////@@begin gen arSet
class ZipBooksRowSet: public wxActiveRecordRowSet{
public:
	ZipBooksRowSet();
	ZipBooksRowSet(wxActiveRecord* activeRecord);
	ZipBooksRowSet(DatabaseLayer* database,const wxString& table=wxT("books"));
	virtual ZipBooksRow* Item(unsigned long item);

	virtual bool SaveAll();


protected:
	static int CMPFUNC_book(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_file(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	static int CMPFUNC_global(wxActiveRecordRow** item1,wxActiveRecordRow** item2);
	virtual CMPFUNC_proto GetCmpFunc(const wxString& var) const;

////@@begin custom arSet
public:




////@@end custom arSet
};
////@@end gen arSet

#endif /* __ZIP_BOOKS_ */
